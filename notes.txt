CLI to begin with, takes in a password and runs it through AES-256 before putting it in a databse

1. make encryption work
2. make decryption
3. figure out string -> bytes with sha


- AES-256 / AES-128 ?
    - https://www.comparitech.com/blog/information-security/what-is-aes-encryption/
    - https://proprivacy.com/guides/aes-encryption
    - https://engineering.purdue.edu/kak/compsec/NewLectures/Lecture8.pdf
    - https://en.wikipedia.org/wiki/AES_key_schedule
    - https://stackoverflow.com/questions/4266756/can-we-make-unsigned-byte-in-java

    - https://csrc.nist.gov/csrc/media/publications/fips/197/final/documents/fips-197.pdf
    - https://engineering.purdue.edu/kak/compsec/NewLectures/Lecture8.pdf
    - https://www.devglan.com/corejava/java-aes-encypt-decrypt
    - https://asecuritysite.com/encryption/padding
    - https://security.stackexchange.com/questions/38828/how-can-i-securely-convert-a-string-password-to-a-key-used-in-aes
    - https://en.wikipedia.org/wiki/PBKDF2
- SQL
    - jdbc
- java create command line tool
    - https://picocli.info/#_add_as_source

Treasury command structure:

    - ts store [name]
        - enter password:, enter notes:
    - ts list
        - lists all currently stored password names
    - ts get name
        - enter master password (?)
    - ts info name
        - prints notes about it and when stored
    - ts find [-n name] [-r regex]
